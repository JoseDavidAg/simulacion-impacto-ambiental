package Vista;


import funcion.ContenidoCSV;
import funcion.CustomCellRenderer;
import static funcion.EjemploPDF.exportTableToPDF;
import funcion.ExportCsv;
import funcion.GenerarDatos;
import funcion.GraficaSimulacion;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;




/**
 *
 * @author ambro
 */
public class Ingresar_CSV extends javax.swing.JFrame {
    
    
    
private String nombreArchivo = "Plantilla/2014.csv";
private String datosRealesArchivo = "Plantilla/DatosReales.csv"; // Nuevo archivo CSV
ContenidoCSV contenidoCSV;
GraficaSimulacion graficar = new GraficaSimulacion();
String[] columnasFinal = {"Anio", "Esperanza de vida real", "Esperanza de vida sin contaminacion", "Esperanza de vida con contaminacion",
"Tasa de natalidad real", "Tasa de natalidad con contaminacion","Tasa de natalidad sin contaminacion", "RDC real",
"RDC simulado", "OI real", "OI simulada"};

int[] anchos = {100, 190, 150, 230, 150}; // Anchos para las columnas de los reales
int[] anchosSimulados = {0, 0, 0, 0, 0, 0}; // Anchos para las columnas de los simulados
int[] columnWidths = {50, 150, 240, 240, 140, 190, 70, 100, 70, 100}; // Anchos para las 6 columnas de la comparativa

public Ingresar_CSV() {
    initComponents();
  setResizable(false);
    
    añosSlider.setValue(0);
    
    // Cargar el primer archivo CSV
    cargarArchivoCSV(nombreArchivo, JTableCSV);

    // Cargar el segundo archivo CSV
    cargarArchivoCSV(datosRealesArchivo, JDatosR);

    //ancho de columnas
    
        for (int i = 0; i < anchos.length; i++) {
            TableColumn column = JDatosR.getColumnModel().getColumn(i);
            column.setPreferredWidth(anchos[i]);
            column.setMinWidth(anchos[i]);
            column.setMaxWidth(anchos[i]);
        }
    
    
    
    // Personalizar las barras de desplazamiento
    JScrollBar verticalScrollBar = jScrollPane1.getVerticalScrollBar();
    verticalScrollBar.setUI(new Principal2.CustomScrollBarUI());

    JScrollBar horizontalScrollBar = jScrollPane1.getHorizontalScrollBar();
    horizontalScrollBar.setUI(new Principal2.CustomScrollBarUI());
}

private void cargarArchivoCSV(String archivoRuta, JTable tabla) {
    // Obtener el archivo desde los recursos del proyecto
    File archivoCSV;
    try {
        archivoCSV = new File(getClass().getClassLoader().getResource(archivoRuta).toURI());
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "No se pudo localizar el archivo dentro del proyecto: " + archivoRuta, "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Verificar si el archivo existe
    if (!archivoCSV.exists()) {
        JOptionPane.showMessageDialog(this, "El archivo especificado no existe en los recursos del proyecto: " + archivoRuta, "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Leer el archivo CSV
    try (BufferedReader br = new BufferedReader(new FileReader(archivoCSV))) {
        String line;

        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        model.setRowCount(0); // Limpiar la tabla existente

        boolean isHeader = true;

        while ((line = br.readLine()) != null) {
            // Dividir la línea respetando comas dentro de valores entre comillas
            String[] values = line.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);

            if (isHeader) {
                // Configurar los nombres de las columnas en la primera línea
                model.setColumnIdentifiers(values);
                isHeader = false;
            } else {
                // Agregar filas según el formato del archivo
                model.addRow(values);
            }
        }

        JOptionPane.showMessageDialog(this, "Archivo CSV cargado correctamente: " + archivoRuta, "Éxito", JOptionPane.INFORMATION_MESSAGE);

    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error al leer el archivo CSV: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

  
   


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Panel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnSeleccionar = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ultimaT = new javax.swing.JTable();
        table1 = new javax.swing.JScrollPane();
        JTableCSV = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        btnSeleccionar1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        datoslbl = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        añosSlider = new javax.swing.JSlider();
        jLabel19 = new javax.swing.JLabel();
        btnSeleccionar2 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        btnImprimir = new javax.swing.JToggleButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JDatosR = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        combo = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        pedeefe = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblAniosSimular = new javax.swing.JLabel();

        jPanel6.setBackground(new java.awt.Color(0, 38, 79));
        jPanel6.setForeground(new java.awt.Color(0, 38, 79));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Modelo para el Futuro de Oaxaca de Juárez");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(293, 293, 293)
                .addComponent(jLabel1)
                .addContainerGap(1101, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jLabel1)
                .addContainerGap(823, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(942, 1725));

        Panel1.setBackground(new java.awt.Color(255, 255, 255));
        Panel1.setMinimumSize(new java.awt.Dimension(940, 1755));
        Panel1.setPreferredSize(new java.awt.Dimension(940, 1755));
        Panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );

        Panel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, 20, 490));

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setForeground(new java.awt.Color(0, 38, 79));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BackButton.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel6.setText("Ingresar Datos(Exel)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel5)
                .addContainerGap(834, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(371, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addGap(380, 380, 380)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel5)
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(29, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addGap(24, 24, 24)))
        );

        Panel1.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 940, 80));

        btnSeleccionar.setBackground(new java.awt.Color(204, 204, 255));
        btnSeleccionar.setForeground(new java.awt.Color(153, 153, 153));
        btnSeleccionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSeleccionarMouseClicked(evt);
            }
        });

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        jLabel13.setText("Cargar");

        javax.swing.GroupLayout btnSeleccionarLayout = new javax.swing.GroupLayout(btnSeleccionar);
        btnSeleccionar.setLayout(btnSeleccionarLayout);
        btnSeleccionarLayout.setHorizontalGroup(
            btnSeleccionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnSeleccionarLayout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(26, 26, 26))
        );
        btnSeleccionarLayout.setVerticalGroup(
            btnSeleccionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnSeleccionarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addContainerGap())
        );

        Panel1.add(btnSeleccionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 790, 110, -1));

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setToolTipText("");

        ultimaT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        ultimaT.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(ultimaT);

        Panel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 500, 430, 280));

        table1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        table1.setColumnHeaderView(null);
        table1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        JTableCSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        JTableCSV.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        table1.setViewportView(JTableCSV);

        Panel1.add(table1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 500, 410, 280));

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));
        jPanel5.setForeground(new java.awt.Color(153, 153, 255));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        Panel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 910, 380, 390));

        jPanel15.setBackground(new java.awt.Color(153, 153, 153));
        jPanel15.setForeground(new java.awt.Color(0, 52, 107));
        jPanel15.setPreferredSize(new java.awt.Dimension(770, 390));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 338, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        Panel1.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 910, 370, 390));

        jPanel17.setBackground(new java.awt.Color(153, 153, 153));
        jPanel17.setForeground(new java.awt.Color(0, 98, 107));
        jPanel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel17MouseClicked(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel14.setText("Impacto ambiental en la tasa de natalidad");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Panel1.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 860, 370, 30));

        btnSeleccionar1.setBackground(new java.awt.Color(204, 204, 255));
        btnSeleccionar1.setForeground(new java.awt.Color(153, 153, 153));
        btnSeleccionar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSeleccionar1MouseClicked(evt);
            }
        });

        jLabel17.setBackground(new java.awt.Color(0, 0, 0));
        jLabel17.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        jLabel17.setText("Graficar");

        javax.swing.GroupLayout btnSeleccionar1Layout = new javax.swing.GroupLayout(btnSeleccionar1);
        btnSeleccionar1.setLayout(btnSeleccionar1Layout);
        btnSeleccionar1Layout.setHorizontalGroup(
            btnSeleccionar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnSeleccionar1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel17)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        btnSeleccionar1Layout.setVerticalGroup(
            btnSeleccionar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnSeleccionar1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Panel1.add(btnSeleccionar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 790, 120, 30));

        jPanel18.setBackground(new java.awt.Color(153, 153, 153));
        jPanel18.setForeground(new java.awt.Color(0, 98, 107));
        jPanel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel18MouseClicked(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel15.setText("Daño ambiental para esperanza de vida ");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel15)
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        Panel1.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 860, 380, -1));

        datoslbl.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        Panel1.add(datoslbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 830, 250, 20));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 153));
        jLabel7.setText("Datos reales de oaxaca centro del año 2014 a 2023 ");
        Panel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, -1, -1));

        añosSlider.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        añosSlider.setMajorTickSpacing(10);
        añosSlider.setPaintLabels(true);
        añosSlider.setPaintTicks(true);
        añosSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                añosSliderStateChanged(evt);
            }
        });
        Panel1.add(añosSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 810, 280, -1));

        jLabel19.setBackground(new java.awt.Color(0, 0, 0));
        jLabel19.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jLabel19.setText("Años a simular:");
        Panel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 790, -1, -1));

        btnSeleccionar2.setBackground(new java.awt.Color(204, 204, 255));
        btnSeleccionar2.setForeground(new java.awt.Color(153, 153, 153));
        btnSeleccionar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSeleccionar2MouseClicked(evt);
            }
        });

        jLabel18.setBackground(new java.awt.Color(0, 0, 0));
        jLabel18.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        jLabel18.setText("Descargar comparativa");

        javax.swing.GroupLayout btnSeleccionar2Layout = new javax.swing.GroupLayout(btnSeleccionar2);
        btnSeleccionar2.setLayout(btnSeleccionar2Layout);
        btnSeleccionar2Layout.setHorizontalGroup(
            btnSeleccionar2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnSeleccionar2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addContainerGap())
        );
        btnSeleccionar2Layout.setVerticalGroup(
            btnSeleccionar2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnSeleccionar2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Panel1.add(btnSeleccionar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 800, 170, -1));

        btnImprimir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnImprimir.setText("Descargar");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        Panel1.add(btnImprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 1790, 100, 40));

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("5.- Para descargar los resultados (tabla y gráficas) en un PDF basta con presionar el boton Generar PDF");
        Panel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 460, 840, 20));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        JDatosR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        JDatosR.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(JDatosR);

        Panel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 820, 190));

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 153));
        jLabel9.setText("Simulacion a futuro apartir de los datos reales: ");
        Panel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 340, -1, -1));

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Esta simulacion toma de la tabla de los datos reales un valor para simularlos a futuro ");
        Panel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, -1, -1));

        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", " " }));
        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });
        Panel1.add(combo, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 390, 110, 20));

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("RDC: Relacion Desechos Contaminación");
        Panel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 340, -1, -1));

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("2.-De nuestro slider escogue a cuantos años quieres simular (Maximo 100)");
        Panel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, -1, -1));

        jLabel20.setBackground(new java.awt.Color(0, 0, 0));
        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setText("3.-Preciona el boton Graficar para que calcule los datos necesarios y grafique con estos");
        Panel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 420, -1, -1));

        pedeefe.setText("Generar PDF");
        pedeefe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pedeefeActionPerformed(evt);
            }
        });
        Panel1.add(pedeefe, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 1350, -1, -1));

        jLabel21.setBackground(new java.awt.Color(0, 0, 0));
        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setText("4.-En caso de querer descargar la tabla presiona el boton Descargar excel y te lo descargara con todos los datos que se encuentran");
        Panel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 440, 840, 20));

        jLabel22.setBackground(new java.awt.Color(0, 0, 0));
        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel22.setText("1.-Escogue el año de partida que se encuentra en el combo");
        Panel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 380, -1, -1));

        jLabel23.setBackground(new java.awt.Color(0, 0, 0));
        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel23.setText("OI: Ocupación Inadecuada");
        Panel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 340, -1, 60));

        jButton1.setText("Descargar Simulados");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        Panel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 790, -1, -1));

        lblAniosSimular.setBackground(new java.awt.Color(0, 0, 0));
        lblAniosSimular.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        lblAniosSimular.setText("50");
        lblAniosSimular.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panel1.add(lblAniosSimular, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 800, 40, 20));

        jScrollPane1.setViewportView(Panel1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 900));
        jScrollPane1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
       
        
         String mensaje = "<html><body><p style='width: 250px;'>⚠️ <b>¿Está seguro de que quiere salir?</b><br><br>"
                   + "Si sale ahora, <i>sus gráficos generados</i> desaparecerán "
                   + "y no podrán recuperarse. <br><br>"
                   + "¿Estas seguro(a) de salirte?</p></body></html>";

    // Muestra el JOptionPane con opciones
    int opcion = JOptionPane.showConfirmDialog(this, mensaje, "Confirmación de salida",
            JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);

    // Verifica la respuesta del usuario
    if (opcion == JOptionPane.OK_OPTION) {
        // Código para salir de la aplicación
        this.dispose();
        Principal2 ventana = new Principal2();
        ventana.setVisible(true);
    }
       
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jPanel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel17MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel17MouseClicked

    private void btnSeleccionar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSeleccionar1MouseClicked
try {
        int cantidadDeFilas = añosSlider.getValue();  // Obtener la cantidad de filas a generar desde el slider

        // Generar nuevos datos en la tabla
        GenerarDatos.generarMasDatos(JTableCSV, cantidadDeFilas);

        // Aplica el renderizador personalizado
        JTableCSV.setDefaultRenderer(Object.class, new CustomCellRenderer(GenerarDatos.filasOriginales));  

        // Calcular valores adicionales si es necesario
        calcularValores(); 

        // Graficar los datos actualizados
        graficar.graficarEspVida(JTableCSV, jPanel8);  
        graficar.graficarTasasDeNatalidad(JTableCSV, jPanel16); 

        //lenar la tabla comparativa
        llenarUltima(JDatosR, JTableCSV, ultimaT);
        
         for (int i = 0; i < anchosSimulados.length ; i++) {
            TableColumn column = JTableCSV.getColumnModel().getColumn(i);
            column.setPreferredWidth(columnWidths[i]);
            column.setMinWidth(columnWidths[i]);
            column.setMaxWidth(columnWidths[i]);
        } 
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    }//GEN-LAST:event_btnSeleccionar1MouseClicked

    
    public void llenarUltima(JTable reales, JTable simulados, JTable ultima){
         DefaultTableModel modeloReales = (DefaultTableModel)reales.getModel();
         DefaultTableModel modeloSimulados = (DefaultTableModel)simulados.getModel();
         
          DefaultTableModel modeloFinal = new DefaultTableModel(columnasFinal, 0);
          
          for (int i = combo.getSelectedIndex(); i < reales.getRowCount(); i++) {
            Object años = reales.getValueAt(i,0);
            Object esperanzaReal = reales.getValueAt(i, 2);
            Object esperanzaSin = simulados.getValueAt(i, 2); 
            Object esperanzaCon = simulados.getValueAt(i, 7); 
            Object TasaReal = reales.getValueAt(i, 1);
            Object TasaCon = simulados.getValueAt(i, 1); 
            Object TasaSin = simulados.getValueAt(i, 6);
            Object relacionReal = reales.getValueAt(i, 3); 
            Object relacionSimulado = simulados.getValueAt(i, 3);
            Object ocupacionReal = reales.getValueAt(i, 4);
            Object ocupacionSimulado = simulados.getValueAt(i, 4);

            // Agregamos una fila combinada
            modeloFinal.addRow(new Object[]{años, esperanzaReal, esperanzaSin, esperanzaCon, TasaReal, TasaCon, TasaSin,
                relacionReal,relacionSimulado, ocupacionReal, ocupacionSimulado});
        }
         ultima.setModel(modeloFinal);
         
        
        for (int i = 0; i < columnWidths.length; i++) {
            TableColumn column = ultimaT.getColumnModel().getColumn(i);
            column.setPreferredWidth(columnWidths[i]);
            column.setMinWidth(columnWidths[i]);
            column.setMaxWidth(columnWidths[i]);
        }
        
        
    }
    
    private void jPanel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel18MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel18MouseClicked

    private void btnSeleccionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSeleccionarMouseClicked
        cargarCsv();        // TODO add your handling code here:
    }//GEN-LAST:event_btnSeleccionarMouseClicked

    private void añosSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_añosSliderStateChanged
// Actualiza el texto del label con el valor del slider
    lblAniosSimular.setText(String.valueOf(añosSlider.getValue()));
    // Obtiene el modelo de la tabla
    DefaultTableModel modelo = (DefaultTableModel) JTableCSV.getModel();
    DefaultTableModel modeloFinal = (DefaultTableModel) ultimaT.getModel();
    // Elimina todas las filas de la tabla
    modelo.setRowCount(1);
    modeloFinal.setRowCount(0);

    }//GEN-LAST:event_añosSliderStateChanged

    private void btnSeleccionar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSeleccionar2MouseClicked
    try {
        ExportCsv e= new ExportCsv();
        e.ExportarTodos(ultimaT, JTableCSV, combo);
        
    } catch (IOException ex) {
        Logger.getLogger(Ingresar_CSV.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btnSeleccionar2MouseClicked

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        graficar.imprimir();
       

    }//GEN-LAST:event_btnImprimirActionPerformed

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed
try {
        String selectedYear = (String) combo.getSelectedItem();
        String rutaCSV = "Plantilla/" + selectedYear + ".csv"; // Ruta relativa dentro del proyecto

        cargarDatosDesdeCSV(rutaCSV); // Carga el CSV seleccionado

        JOptionPane.showMessageDialog(this, "Datos del año " + selectedYear + " cargados correctamente.", "Carga Exitosa", JOptionPane.INFORMATION_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al cargar el archivo: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } // TODO add your handling code here:
    
    DefaultTableModel modeloFinal = (DefaultTableModel) ultimaT.getModel();
    modeloFinal.setRowCount(0);

    }//GEN-LAST:event_comboActionPerformed

    private void pedeefeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pedeefeActionPerformed
        exportTableToPDF(ultimaT, jPanel8, jPanel16, "resultadosSimulacion");
    }//GEN-LAST:event_pedeefeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    try {
        ExportCsv e = new ExportCsv();
        e.exportarSimulados(JTableCSV);
        
    } catch (IOException ex) {
        Logger.getLogger(Ingresar_CSV.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton1ActionPerformed
private void cargarDatosDesdeCSV(String rutaCSV) {
    try {
        // Usar el ClassLoader para obtener la ruta correcta del archivo dentro del proyecto
        InputStream inputStream = getClass().getClassLoader().getResourceAsStream(rutaCSV);
        if (inputStream == null) {
            throw new RuntimeException("El archivo " + rutaCSV + " no se encuentra.");
        }

        BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));
        String line;
        DefaultTableModel model = new DefaultTableModel();

        // Leer el archivo línea por línea
        while ((line = br.readLine()) != null) {
            String[] data = line.split(",");

            // Si es la primera línea, establece los encabezados automáticamente
            if (model.getColumnCount() == 0) {
                for (String columnName : data) {
                    model.addColumn(columnName.trim()); // Agrega los encabezados
                }
            } else {
                model.addRow(data); // Agrega los datos a las filas
            }
        }

        JTableCSV.setModel(model); // Establece el modelo con los datos cargados
        br.close();
    } catch (IOException e) {
        throw new RuntimeException("Error al leer el archivo CSV: " + e.getMessage(), e);
    }
}


    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

         
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ingresar_CSV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JDatosR;
    private javax.swing.JTable JTableCSV;
    private javax.swing.JPanel Panel1;
    private javax.swing.JSlider añosSlider;
    private javax.swing.JToggleButton btnImprimir;
    private javax.swing.JPanel btnSeleccionar;
    private javax.swing.JPanel btnSeleccionar1;
    private javax.swing.JPanel btnSeleccionar2;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JLabel datoslbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAniosSimular;
    private javax.swing.JButton pedeefe;
    private javax.swing.JScrollPane table1;
    private javax.swing.JTable ultimaT;
    // End of variables declaration//GEN-END:variables

private void cargarCsv() {
        contenidoCSV = new ContenidoCSV();
        
        // Cargar los datos desde el archivo CSV
        contenidoCSV.cargarDesdeArchivo();
        
        // Obtener los datos del archivo CSV
        String[] encabezados = contenidoCSV.obtenerEncabezados();
        List<String[]> filas = contenidoCSV.obtenerFilas();

        // Crear el modelo de la tabla con los encabezados
        DefaultTableModel model = new DefaultTableModel();
     
        model.setColumnIdentifiers(encabezados);
      
        // Agregar las filas al modelo
        for (String[] fila : filas) {
            
            model.addRow(fila);
        }
        // Asignar el modelo de la tabla al JTable
        JTableCSV.setModel(model);
}

private void calcularValores() {
    DefaultTableModel model = (DefaultTableModel) JTableCSV.getModel();
    int rowCount = model.getRowCount();

    if (rowCount == 0) {
        datoslbl.setText("La tabla está vacía. Carga un archivo CSV primero.");
        return;
    }
 

    // Asegurarse de que las columnas adicionales para resultados existan
    if (model.getColumnCount() < 6) {
        model.addColumn("Daño Ambiental");
        model.addColumn("Tasa de Natalidad Calculada");
        model.addColumn("Esperanza de Vida Calculada");
    }

    try {
        for (int i = 0; i < rowCount; i++) {
            int anio = Integer.parseInt((String) model.getValueAt(i, 0)); // Columna "Año"
            double tasaNatalidadNormal = Double.parseDouble((String) model.getValueAt(i, 1)); // Tasa natalidad
            double esperanzaVidaNormal = Double.parseDouble((String) model.getValueAt(i, 2)); // Esperanza de vida
            double relacionDesechos = Double.parseDouble((String) model.getValueAt(i, 3)); // Relación desechos
            double ocupacionInadecuada = Double.parseDouble((String) model.getValueAt(i, 4)); // Ocupación inadecuada

            // Cálculo de daño ambiental
            double danioAmbiental = relacionDesechos + ocupacionInadecuada;

            // Cálculo de tasa de natalidad calculada
            double tasaNatalidadCalculada = tasaNatalidadNormal - (danioAmbiental * 8.35e-5);

            // Cálculo de esperanza de vida calculada
            double esperanzaVidaCalculada = esperanzaVidaNormal * (1 - danioAmbiental * 0.07);

            // Agregar los resultados calculados directamente en las nuevas columnas
            model.setValueAt(String.format("%.4f", danioAmbiental), i, 5); // Columna "Daño Ambiental"
            model.setValueAt(String.format("%.4f", tasaNatalidadCalculada), i, 6); // Columna "Tasa de Natalidad Calculada"
            model.setValueAt(String.format("%.2f", esperanzaVidaCalculada), i, 7); // Columna "Esperanza de Vida Calculada"
        }

        datoslbl.setText("Valores calculados y añadidos a la tabla.");
    } catch (Exception ex) {
        datoslbl.setText("Error en el cálculo: " + ex.getMessage());
    }
}
}
